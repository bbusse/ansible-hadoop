---

  - name: Create {{ service }} user
    user: name={{ service }} comment={{ service }} shell=/bin/nologin createhome=no system=yes
    become: yes

  - name: Download Hadoop archive if not existent
    get_url:
      url: "{{ hadoop_archive_url }}"
      dest: "{{ hadoop_path }}/{{ hadoop_archive_file }}"
      mode: 0600
      checksum: sha256:{{ hadoop_archive_file_checksum256 }}
    run_once: true
    delegate_to: localhost

  - name: Extract archive
    ansible.builtin.unarchive:
      src: "{{ hadoop_path }}/{{ hadoop_archive_file }}"
      dest: "{{ hadoop_path }}"

  - name: Recursively remove directory
    ansible.builtin.file:
      path: "{{ hadoop_path }}/{{ hadoop_dir }}"
      state: absent

  - name: Rename dir
    command: mv -f {{ hadoop_path }}/{{ hadoop_archive_dir }} {{ hadoop_path }}/{{ hadoop_dir }}

  - name: Write config templates
    ansible.builtin.command:
      cmd: "roles/hdfs/files/hadoop-config.sh"
    delegate_to: localhost

  - name: Write service templates
    ansible.builtin.command:
      cmd: "roles/hdfs/files/hdfs-service-config.sh"
    delegate_to: localhost

  - name: Create core-site.xml
    template: src={{ hadoop_config_path}}/core-site.xml.j2 dest={{ hadoop_config_path}}/core-site.xml mode=0700

  - name: Create hdfs-site.xml
    template: src={{ hadoop_config_path}}/hdfs-site.xml.j2 dest={{ hadoop_config_path}}/hdfs-site.xml mode=0700

  - name: Create mapred-site.xml
    template: src={{ hadoop_config_path}}/core-site.xml.j2 dest={{ hadoop_config_path}}/mapred-site.xml mode=0700

  - name: Create systemd unit env file
    template: src={{ hadoop_config_path}}/systemd-env-hdfs.j2 dest=/etc/systemd-env-hdfs mode=0700
    become: yes
    when: ansible_distribution != "FreeBSD"

  - name: Create systemd unit for HDFS bootstrap - formatting the namenode
    template: src={{ hadoop_config_path}}/hdfs-bootstrap.service.j2 dest=/etc/systemd/system/hdfs-bootstrap.service mode=0700
    become: yes
    when: ansible_distribution != "FreeBSD"

  - name: Create systemd unit for HDFS namenode
    template: src={{ hadoop_config_path}}/hdfs-namenode.service.j2 dest=/etc/systemd/system/hdfs-namenode.service mode=0700
    become: yes
    when: ansible_distribution != "FreeBSD"

  - name: Create systemd unit for HDFS datanode
    template: src={{ hadoop_config_path}}/hdfs-datanode.service.j2 dest=/etc/systemd/system/hdfs-datanode.service mode=0700
    become: yes
    when: ansible_distribution != "FreeBSD"

  - name: Create systemd unit for HDFS journalnode
    template: src={{ hadoop_config_path}}/hdfs-journalnode.service.j2 dest=/etc/systemd/system/hdfs-journalnode.service mode=0700
    become: yes
    when: ansible_distribution != "FreeBSD"

  - name: Format HDFS for HA
    service: name={{ service_hdfs_bootstrap }} state=started
